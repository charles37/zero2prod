name: Rust CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://username:password@localhost/dbname
      SQLX_OFFLINE: true
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint with clippy
        run: cargo clippy -- -D warnings




# name: Rust

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# env:
#   CARGO_TERM_COLOR: always
#   RUSTFLAGS: "-Dwarnings"

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:

#     # # Install cargo-clippy for linting
#     # - name: Install clippy
#     #   run: rustup component add clippy

#     # # cargo fmt does not need to be installed as it comes with the rustup toolchain

#     # # Install cargo-audit for security audit
#     # - name: Install cargo-audit
#     #   run: cargo install cargo-audit

#     - uses: actions/checkout@v4
#     - name: Build
#       run: cargo build --verbose
#     - name: Run tests
#       run: cargo test --verbose
    
#     # - name: Code Linter
#     #   run: cargo clippy --all-targets --all-features    
#     # - name: Code formatter
#     #   run: cargo fmt -- --check
#     # - name: Securiy audit
#     #   run: cargo audit
